{"ast":null,"code":"import _slicedToArray from \"/Users/itzel/Desktop/SheCodes/4. SheCodes React/w1-homework Itzel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/itzel/Desktop/SheCodes/4. SheCodes React/w1-homework Itzel/src/components/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherForecastDay from './WeatherForecastDay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      forecast = _useState4[0],\n      setForecast = _useState4[1];\n\n  useEffect(function () {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    var apiKey = '5f472b7acba333cd8a035ea85a0d4d4c';\n    var longitude = props.coordinates.lon;\n    var latitude = props.coordinates.lat;\n    var apiUrl = \"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return null;\n  }\n}\n\n_s(Forecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherForecastDay","Forecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","load","apiKey","longitude","lon","latitude","lat","apiUrl","get","then","map","dailyForecast","index"],"sources":["/Users/itzel/Desktop/SheCodes/4. SheCodes React/w1-homework Itzel/src/components/Forecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport WeatherForecastDay from './WeatherForecastDay';\n\nexport default function Forecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let apiKey = '5f472b7acba333cd8a035ea85a0d4d4c';\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (loaded) {\n    return (\n      <div className='WeatherForecast'>\n        <div className='row'>\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className='col' key={index}>\n                  <WeatherForecastDay data={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    load();\n\n    return null;\n  }\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACtC,gBAA0BL,QAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAKM,MAAL;EAAA,IAAaC,SAAb;;EACA,iBAA8BP,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAKQ,QAAL;EAAA,IAAeC,WAAf;;EAEAR,SAAS,CAAC,YAAM;IACdM,SAAS,CAAC,KAAD,CAAT;EACD,CAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;EAIA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;IAChCH,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;IACAP,SAAS,CAAC,IAAD,CAAT;EACD;;EAED,SAASQ,IAAT,GAAgB;IACd,IAAIC,MAAM,GAAG,kCAAb;IACA,IAAIC,SAAS,GAAGZ,KAAK,CAACK,WAAN,CAAkBQ,GAAlC;IACA,IAAIC,QAAQ,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAjC;IACA,IAAIC,MAAM,iEAA0DF,QAA1D,kBAA0EF,SAA1E,oBAA6FD,MAA7F,kBAAV;IAEAd,KAAK,CAACoB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBZ,cAAvB;EACD;;EAED,IAAIL,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,UACGE,QAAQ,CAACgB,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;UAC5C,IAAIA,KAAK,GAAG,CAAZ,EAAe;YACb,oBACE;cAAK,SAAS,EAAC,KAAf;cAAA,uBACE,QAAC,kBAAD;gBAAoB,IAAI,EAAED;cAA1B;gBAAA;gBAAA;gBAAA;cAAA;YADF,GAA0BC,KAA1B;cAAA;cAAA;cAAA;YAAA,QADF;UAKD,CAND,MAMO;YACL,OAAO,IAAP;UACD;QACF,CAVA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD,CAlBD,MAkBO;IACLX,IAAI;IAEJ,OAAO,IAAP;EACD;AACF;;GA7CuBX,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}